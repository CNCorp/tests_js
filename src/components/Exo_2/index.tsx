import { FormEvent, useEffect, useState } from "react";
import Modal from "./modal";

type TicketType = {
  // id automatically generated by DB
  id: number;
  date: Date;
  article: string;
  price: number;
};

const process = {
  env: {
    REACT_APP_DBURL: "ooo",
  },
};

const Ex = () => {
  const [Open, setOpen] = useState<boolean>(false);
  const [ModalData, setModalData] = useState<TicketType | null>(null);
  const [Total, setTotal] = useState<number>(0);
  const [MonthTotal, setMonthTotal] = useState<number>(0);
  const [TicketsList, setTicketsList] = useState<TicketType[]>();

  let ticketsList: TicketType[] = [];

  const ticket1: TicketType = {
    id: 1,
    date: new Date("2022-09-09"),
    article: "shoes",
    price: 100,
  };
  const ticket2: TicketType = {
    id: 2,
    date: new Date("2022-09-10"),
    article: "gloves",
    price: 20,
  };
  const ticket3: TicketType = {
    id: 3,
    date: new Date("2022-09-14"),
    article: "hat",
    price: 45,
  };
  ticketsList.push(ticket1, ticket2, ticket3);

  // 2 CRUD functions => on prod with DB | locally for the demo
  const deleteTicket = (id: number) => {
    fetch(process.env.REACT_APP_DBURL + "/tickets/" + id, {
      method: "DELETE",
    })
      .then(() => {
        console.log("ticket deleted ‚úÖ");
        fetchTickets();
      })
      .catch((err) => {
        console.log(err);
      });
  };
  const del = (id: number) => {
    let newList = TicketsList?.filter((t) => t.id !== id);
    setTicketsList(newList);
  };

  const openModal = (t: TicketType | null) => {
    setModalData(t);
    setOpen(true);
  };

  const monthTotal = () => {
    let monthNow: number = new Date().getMonth();
    let yearNow: number = new Date().getFullYear();
    let monthList: TicketType[] | undefined = TicketsList?.filter(
      (t) => t.date.getMonth() === monthNow && t.date.getFullYear() === yearNow
    );
    let total: number = 0;
    monthList?.forEach((t) => {
      total += t.price;
    });
    setMonthTotal(total);
    return total;
  };

  const allTimeTotal = () => {
    let total: number = 0;
    TicketsList?.forEach((t) => {
      total += t.price;
    });
    setTotal(total);
    return total;
  };

  const fetchTickets = async () => {
    // let res = await fetch(process.env.REACT_APP_DBURL + "/tickets");
    // let tickets = await res.json();
    // setTicketsList(tickets);

    // calculate totals without state for 1st init, ticketsList[] to be replaced by API res
    let total = 0;
    ticketsList.forEach((t) => {
      total += t.price;
    });
    setTotal(total);

    let monthNow = new Date().getMonth();
    let monthList = ticketsList.filter((t) => t.date.getMonth() === monthNow);
    let totalmonth = 0;
    monthList?.forEach((t) => {
      totalmonth += t.price;
    });
    setMonthTotal(totalmonth);

    // init tickets list state
    setTicketsList(ticketsList);
  };

  useEffect(() => {
    fetchTickets();
  }, []);

  return (
    <section>
      <h1 className="my-5">Exo 2 : Tickets de caisse</h1>
      <hr></hr>
      <button onClick={() => openModal(null)} className="mt-2">
        üìù
      </button>
      <div className="my-5">
        <table>
          <tr className="bold">
            <th>Month total</th>
            <th>All time total</th>
          </tr>
          <tr>
            <td>{MonthTotal && MonthTotal}</td>
            <td>{Total && Total}</td>
          </tr>
        </table>
      </div>
      <hr></hr>
      <div className="mt-8">
        {TicketsList &&
          TicketsList.map((t) => (
            <div key={t.id} className="my-6">
              <table>
                <tr className="bold">
                  <th>Article</th>
                  <th>Date</th>
                  <th>Price</th>
                </tr>
                <tr>
                  <td>{t.article}</td>
                  <td>{t.date.toLocaleDateString()}</td>
                  <td>{t.price}</td>
                </tr>
              </table>

              <div>
                <button onClick={() => del(t.id)} className="mr-3 mt-2">
                  üóëÔ∏è
                </button>
                <button onClick={() => openModal(t)}>‚úèÔ∏è</button>
              </div>
            </div>
          ))}
      </div>

      {Open && (
        <Modal
          ticket={ModalData}
          TicketsList={TicketsList}
          setTicketsList={setTicketsList}
          setOpen={setOpen}
          allTimeTotal={allTimeTotal}
          monthTotal={monthTotal}
        />
      )}
    </section>
  );
};

export default Ex;
